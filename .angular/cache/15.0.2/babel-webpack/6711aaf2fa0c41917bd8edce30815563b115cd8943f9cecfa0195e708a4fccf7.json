{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"http://localhost:8080/api/categories\";\n  }\n  save() {}\n  getById(categoryId) {}\n  getAll() {\n    return this.httpClient.get(`${this.url}/all`);\n  }\n  getAllByUser(idUser) {}\n  getAllForToday(userId) {}\n  delete(categoryId) {}\n  static #_ = this.ɵfac = function CategoryServiceService_Factory(t) {\n    return new (t || CategoryServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryServiceService,\n    factory: CategoryServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADb,QAAG,GAAU,sCAAsC;EAEpE;EAGAC,IAAI,IAEJ;EAEAC,OAAO,CAACC,UAAkB,GAE1B;EAGEC,MAAM;IACJ,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAgB,GAAG,IAAI,CAACC,GAAG,MAAM,CAAC;EAC9D;EAMFC,YAAY,CAACC,MAAc,GAE3B;EAGAC,cAAc,CAACC,MAAc,GAC7B;EAGAC,MAAM,CAACR,UAAkB,GAEzB;EAAC;qBAlCUL,sBAAsB;EAAA;EAAA;WAAtBA,sBAAsB;IAAAc,SAAtBd,sBAAsB;IAAAe,YAFrB;EAAM","names":["CategoryServiceService","constructor","httpClient","save","getById","categoryId","getAll","get","url","getAllByUser","idUser","getAllForToday","userId","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\angular\\Front\\src\\app\\services\\category-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CategoryDto } from '../models/CategoryDto';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryServiceService {\n  private readonly url: string =\"http://localhost:8080/api/categories\";\n  constructor(private httpClient: HttpClient ) { \n  }\n\n\n  save() {\n\n  }\n\n  getById(categoryId: number){\n\n  }\n\n  \n    getAll():Observable<CategoryDto[]>{\n      return this.httpClient.get<CategoryDto[]>(`${this.url}/all`);\n    }\n  \n    \n  \n\n\n  getAllByUser(idUser: number) {\n   \n  }\n\n  \n  getAllForToday(userId: number) {\n  }\n\n  \n  delete(categoryId: number) {\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}