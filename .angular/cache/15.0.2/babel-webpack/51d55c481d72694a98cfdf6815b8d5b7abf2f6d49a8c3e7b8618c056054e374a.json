{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"http://localhost:8080/users\";\n  }\n  saveUser(userDto) {\n    return this.httpClient.post(`${this.url}/users/create`, userDto);\n  }\n  addDomaine(langage) {\n    return this.httpClient.post(`${this.url}/users/create`, langage);\n  }\n  login(userDto) {}\n  updateLoggedUser(userDto) {\n    this.loggedUser = userDto;\n    localStorage.setItem('loggedUser', JSON.stringify(this.loggedUser));\n  }\n  getLoggedUser() {\n    if (this.loggedUser !== null && this.loggedUser !== undefined) {\n      return this.loggedUser;\n    }\n    if (localStorage.getItem('loggedUser') !== null && localStorage.getItem('loggedUser') !== undefined) {\n      this.loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      return this.loggedUser;\n    }\n    return null;\n  }\n  static #_ = this.ɵfac = function UserServiceService_Factory(t) {\n    return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserServiceService,\n    factory: UserServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAM7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFb,QAAG,GAAU,6BAA6B;EAEb;EAE9CC,QAAQ,CAACC,OAAiB;IAExB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,eAAe,EAAEF,OAAO,CAAC;EAElE;EAEAG,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACN,UAAU,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,eAAe,EAAEE,OAAO,CAAC;EAClE;EAGAC,KAAK,CAAEL,OAAgB,GAEvB;EAEAM,gBAAgB,CAACN,OAAgB;IAC/B,IAAI,CAACO,UAAU,GAAGP,OAAO;IACzBQ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,UAAU,CAAC,CAAC;EACrE;EAGAK,aAAa;IACX,IAAI,IAAI,CAACL,UAAU,KAAK,IAAI,IAAI,IAAI,CAACA,UAAU,KAAKM,SAAS,EAAE;MAC7D,OAAO,IAAI,CAACN,UAAU;;IAExB,IAAIC,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,KAAK,IAAI,IAAIN,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,KAAKD,SAAS,EAAE;MACnG,IAAI,CAACN,UAAU,GAAGG,IAAI,CAACK,KAAK,CAACP,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,CAAC;MAChE,OAAO,IAAI,CAACP,UAAU;;IAExB,OAAO,IAAI;EACb;EAAC;qBAtCUX,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAoB,SAAlBpB,kBAAkB;IAAAqB,YAFjB;EAAM","names":["UserServiceService","constructor","httpClient","saveUser","userDto","post","url","addDomaine","langage","login","updateLoggedUser","loggedUser","localStorage","setItem","JSON","stringify","getLoggedUser","undefined","getItem","parse","factory","providedIn"],"sourceRoot":"","sources":["D:\\angular\\Front\\src\\app\\services\\user-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserDto } from '../models/userDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n   \n  public loggedUser:UserDto | undefined;\n\n  private readonly url: string =\"http://localhost:8080/users\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  saveUser(userDto : UserDto):Observable <Object> { \n\n    return this.httpClient.post(`${this.url}/users/create`, userDto)\n  \n  }\n\n  addDomaine(langage: Langage): Observable<Object> {\n    return this.httpClient.post(`${this.url}/users/create`, langage);\n  }\n\n\n  login( userDto: UserDto){\n\n  }\n\n  updateLoggedUser(userDto: UserDto) {\n    this.loggedUser = userDto;\n    localStorage.setItem('loggedUser', JSON.stringify(this.loggedUser));\n  }\n  \n\n  getLoggedUser() {\n    if (this.loggedUser !== null && this.loggedUser !== undefined) {\n      return this.loggedUser;\n    }\n    if (localStorage.getItem('loggedUser') !== null && localStorage.getItem('loggedUser') !== undefined) {\n      this.loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      return this.loggedUser;\n    }\n    return null;\n  }\n\n\n   \n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}